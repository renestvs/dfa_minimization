export function mirror(A)
    let mirA := new Automaton
    let F    := A.getFinalStates()

    if F.card() = 0 then
        mirA.setInitialState("I")
        return mirA
    else if F.card() = 1 then
        let f := F.getItem()
        mirA.setInitialState(f);
    else
        let ini := "I"

        while A.hasState(ini) do
            ini := ini + "I"
        done

        mirA.setInitialState(ini)

        foreach state in F do
            mirA.addState(state)
            mirA.addTransition(ini, epsilon, state)
        done
    end if

    foreach state in A.getStates() do
        mirA.addState(state)
    done

    foreach t in A.getTransitions() do
        mirA.addTransition(t.endState, t.symbol, t.startState)
    done

    mirA.setFinalState(A.getInitialState())

    return mirA
end function

run(mirror, get_automaton(currentAutomaton))
